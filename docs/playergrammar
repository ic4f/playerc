
PROGRAM  ->  program IDENTIFIER MAKE-ID DECLARATIONS-OPT MAKE-DECLARATION-LIST begin STATEMENTS-OPT MAKE-STATEMENT-LIST end MAKE-PROGRAM

DECLARATIONS-OPT  ->  DECLARATION DECLARATIONS-OPT
DECLARATIONS-OPT  ->  EMPTY

STATEMENTS-OPT  ->  STATEMENT STATEMENTS-OPT 
STATEMENTS-OPT  ->  EMPTY 

DECLARATION  ->  var VAR-DECLS-OPT
DECLARATION  ->  type TYPE-DECLS-OPT
DECLARATION  ->  procedure PROCEDURE-DECLS-OPT

VAR-DECLS-OPT  ->  VAR-DECL VAR-DECLS-OPT
VAR-DECLS-OPT  ->  EMPTY

TYPE-DECLS-OPT  ->  TYPE-DECL TYPE-DECLS-OPT
TYPE-DECLS-OPT  ->  EMPTY

PROCEDURE-DECLS-OPT  ->  PROCEDURE-DECL PROCEDURE-DECLS-OPT
PROCEDURE-DECLS-OPT  ->  EMPTY 

VAR-DECL  ->  IDENTIFIER MAKE-ID TYPENAME-OPT := EXPRESSION ; MAKE-VAR-DECL

TYPENAME-OPT  ->  : TYPENAME 
TYPENAME-OPT  ->  EMPTY

TYPE-DECL  ->  IDENTIFIER MAKE-ID = TYPE-DECL-REST

TYPE-DECL-REST  -> array of TYPENAME ; MAKE-ARRAY-TYPE-DECL
TYPE-DECL-REST  -> record MEMBER MEMBERS-OPT MAKE-MEMBER-LIST end MAKE-RECORD-TYPE-DECL

MEMBER  ->  IDENTIFIER MAKE-ID : TYPENAME ; MAKE-MEMBER

MEMBERS-OPT  -> MEMBER MEMBERS-OPT 
MEMBERS-OPT  -> EMPTY

TYPENAME  -> IDENTIFIER MAKE-ID MAKE-NEW-TYPENAME
TYPENAME  ->  integer MAKE-PRIMITIVE-TYPENAME
TYPENAME  ->  real MAKE-PRIMITIVE-TYPENAME
TYPENAME  ->  boolean MAKE-PRIMITIVE-TYPENAME
TYPENAME  ->  string MAKE-PRIMITIVE-TYPENAME

PROCEDURE-DECL  ->  IDENTIFIER MAKE-ID FORMAL-PARAMS MAKE-FORMAL-PARAMS TYPENAME-OPT INNER-DECLARATIONS-OPT MAKE-DECLARATION-LIST begin STATEMENTS-OPT MAKE-STATEMENT-LIST end ; MAKE-PROCEDURE-DECL 

FORMAL-PARAMS  ->  (  FORMAL-PARAMS-REST

FORMAL-PARAMS-REST  ->  FP-SECTION FP-SECTIONS-MORE-OPT MAKE-FP-SECTION-LIST )  
FORMAL-PARAMS-REST  ->  )

FP-SECTIONS-MORE-OPT  ->  ; FP-SECTION FP-SECTIONS-MORE-OPT
FP-SECTIONS-MORE-OPT  ->  EMPTY

FP-SECTION  ->  IDENTIFIER MAKE-ID : TYPENAME MAKE-FP-SECTION

INNER-DECLARATIONS-OPT  ->  INNER-DECLARATION INNER-DECLARATIONS-OPT	
INNER-DECLARATIONS-OPT  ->  EMPTY

INNER-DECLARATION  ->  var VAR-DECLS-OPT 
INNER-DECLARATION  ->  type TYPE-DECLS-OPT 

STATEMENT  ->  read ( MAKE-MARKER LVALUE LVALUES-MORE-OPT MAKE-LVALUE-LIST ) ; MAKE-READ-STATEMENT
STATEMENT  ->  write MAKE-MARKER EXPRESSION EXPRESSIONS-MORE-OPT MAKE-EXPRESSION-LIST ; MAKE-WRITE-STATEMENT
STATEMENT  ->  exit ; MAKE-EXIT-STATEMENT
STATEMENT  ->  return MAKE-MARKER EXPRESSION-OPT ; MAKE-RETURN-STATEMENT
STATEMENT  ->  loop MAKE-MARKER STATEMENT STATEMENTS-OPT MAKE-STATEMENT-LIST ; MAKE-LOOP-STATEMENT
STATEMENT  ->  for IDENTIFIER MAKE-ID := EXPRESSION to EXPRESSION MAKE-MARKER BY-EXPRESSION-OPT do STATEMENTS-OPT MAKE-STATEMENT-LIST ; MAKE-FOR-STATEMENT 
STATEMENT  ->  if EXPRESSION then STATEMENT STATEMENTS-OPT MAKE-STATEMENT-LIST MAKE-IFTHEN ELSEIFS-OPT MAKE-IFTHEN-LIST ELSE-OPT end ; MAKE-IF-STATEMENT
STATEMENT  ->  IDENTIFIER MAKE-ID STATEMENT-ID-REST 

STATEMENT-ID-REST  ->  MAKE-ID-LVAL LVALUE-REST := EXPRESSION ; MAKE-ASSIGNMENT-STATEMENT
STATEMENT-ID-REST  ->  ACTUAL-PARAMS ; MAKE-CALL-STATEMENT

ELSEIFS-OPT  ->  ELSEIF ELSEIFS-OPT
ELSEIFS-OPT  ->  EMPTY

ELSE-OPT  ->  else MAKE-MARKER STATEMENT STATEMENTS-OPT MAKE-STATEMENT-LIST MAKE-ELSE
ELSE-OPT  ->  EMPTY

ELSEIF  ->  elseif EXPRESSION then STATEMENT STATEMENTS-OPT MAKE-STATEMENT-LIST MAKE-IFTHEN

LVALUE  ->  IDENTIFIER MAKE-ID MAKE-ID-LVAL LVALUE-REST

LVALUE-REST  ->  [ EXPRESSION ] MAKE-LOOKUP-LVAL LVALUE-REST
LVALUE-REST  ->  . IDENTIFIER MAKE-ID MAKE-DEREF-LVAL LVALUE-REST
LVALUE-REST  ->  EMPTY

LVALUES-MORE-OPT  ->  , LVALUE LVALUES-MORE-OPT 
LVALUES-MORE-OPT  ->  EMPTY

ACTUAL-PARAMS  ->  ( MAKE-MARKER ACTUAL-PARAMS-REST 

ACTUAL-PARAMS-REST  ->  EXPRESSION EXPRESSIONS-MORE-OPT MAKE-EXPRESSION-LIST )
ACTUAL-PARAMS-REST  ->  ) 

EXPRESSIONS-MORE-OPT  ->  , EXPRESSION EXPRESSIONS-MORE-OPT 
EXPRESSIONS-MORE-OPT  ->  EMPTY

EXPRESSION-OPT  ->  EXPRESSION 
EXPRESSION-OPT  ->  EMPTY

BY-EXPRESSION-OPT  ->  by EXPRESSION
BY-EXPRESSION-OPT  -> EMPTY

BINARY-OP  ->  + 
BINARY-OP  ->  - 
BINARY-OP  ->  * 
BINARY-OP  ->  / 
BINARY-OP  ->  and
BINARY-OP  ->  or
BINARY-OP  ->  >
BINARY-OP  ->  <
BINARY-OP  ->  =
BINARY-OP  ->  >= 
BINARY-OP  ->  <= 
BINARY-OP  ->  <> 

UNARY-OP  ->  +
UNARY-OP  ->  -
UNARY-OP  ->  not

EXPRESSION  ->  LITERAL-INTEGER MAKE-INTEGER-EXP EXPRESSION-REST
EXPRESSION	  ->  LITERAL-REAL MAKE-REAL-EXP EXPRESSION-REST
EXPRESSION	  ->  LITERAL-STRING MAKE-STRING-EXP EXPRESSION-REST
EXPRESSION	  ->  null MAKE-NULL-EXP EXPRESSION-REST
EXPRESSION	  ->  true MAKE-TRUE-EXP EXPRESSION-REST
EXPRESSION	  ->  false MAKE-FALSE-EXP EXPRESSION-REST
EXPRESSION	  ->  ( EXPRESSION ) MAKE-PAREN-EXP EXPRESSION-REST
EXPRESSION	  ->  UNARY-OP MAKE-OPERATOR EXPRESSION MAKE-UNARY-OP-EXP EXPRESSION-REST
EXPRESSION	  ->  IDENTIFIER MAKE-ID EXPRESSION-ID-REST EXPRESSION-REST

EXPRESSION-ID-REST  ->  MAKE-ID-LVAL LVALUE-REST MAKE-LVAL-EXP
EXPRESSION-ID-REST	  ->  ACTUAL-PARAMS MAKE-CALL-EXP
EXPRESSION-ID-REST	  ->  { MAKE-MARKER RECORD-INIT RECORD-INITS-MORE-OPT MAKE-RECORD-INIT-LIST } MAKE-RECORD-INITS-EXP
EXPRESSION-ID-REST	  ->  [< MAKE-MARKER EXPRESSION EXPRESSIONS-MORE-OPT MAKE-EXPRESSION-LIST >] MAKE-ARRAY-INITS-EXP

EXPRESSION-REST  ->  BINARY-OP MAKE-OPERATOR EXPRESSION MAKE-BINARY-OP-EXP EXPRESSION-REST
EXPRESSION-REST  ->  EMPTY

RECORD-INIT  ->  IDENTIFIER MAKE-ID := EXPRESSION MAKE-RECORD-INIT

RECORD-INITS-MORE-OPT  ->  ; RECORD-INIT RECORD-INITS-MORE-OPT
RECORD-INITS-MORE-OPT	  ->  EMPTY	
